#!/bin/sh
#
# netmrg_cron.sh
#
# a shell script to remove lockfiles and rotate output if it died
#

prefix="@prefix@"
exec_prefix="@exec_prefix@"
bindir="@bindir@"
localstatedir="@localstatedir@"
prog="@PACKAGE@"

mailto="root"
logdir="$localstatedir/log/$prog"
netmrg="$bindir/netmrg-gatherer"
lockfile="$logdir/lockfile"
output="$logdir/lastrun.log"
error="$logdir/lastrun.err"
curdate=`date +%s`

if [ -e $lockfile ] ; then
	lastrun=`cat $lockfile`;
	rundiff=$(($curdate - $lastrun));
	echo "NetMRG died on its run $rundiff seconds ago.  I'll remove the lockfile" | mail -s "NetMRG died at $lastrun" $mailto
	mv -f $output $output.$lastrun
	mv -f $error $error.$lastrun
	rm -f $lockfile
fi

$netmrg > $output 2> $error
exitval=$?

if [ $exitval -eq 2 ] ; then
	echo "NetMRG failed to create a lockfile.  Perhaps another copy is running?" | mail -s "NetMRG lockfile present at $curdate" $mailto
	mv -f $output $output.$curdate
	mv -f $error $error.$curdate
elif [ $exitval -eq 3 ] ; then
	echo "NetMRG failed to establish a database connection" | mail -s "NetMRG database connect failed at $curdate" $mailto
	mv -f $output $output.$curdate
	mv -f $error $error.$curdate
elif [ $exitval -eq 4 ] ; then
	echo "NetMRG database version mismatch.  Please run updater." | mail -s "NetMRG database version mismatch at $curdate" $mailto
	mv -f $output $output.$curdate
	mv -f $error $error.$curdate
elif [ $exitval -eq 254 ] ; then
	echo "NetMRG lockfile present at start. Perhaps another copy is running" | mail -s "NetMRG lockfile is present at $curdate" $mailto
	mv -f $output $output.$curdate
	mv -f $error $error.$curdate
elif [ $exitval -ne 0 ] ; then
	echo "NetMRG exited abnormally" | mail -s "NetMRG exited abnormally at $curdate" $mailto
	mv -f $output $output.$curdate
	mv -f $error $error.$curdate
fi
